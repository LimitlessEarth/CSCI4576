Adam Ross
adamross1126@gmail.com

HW2.1
1) The program should send first because RECV is a blocking call. If we were to have the RECV before 
 SEND all processes are sitting waiting for a message, nothing would execute further.
2) It does matter, there must be a SEND for a RECV process to continue executing. If we do not pay attention to this
 we will lose efficiency or large portions or working code all together. 
3) My source and destination are calculated by:
    dest = (my_rank + 1) % p;
    source = (my_rank == 0 ? (p - 1) : (my_rank - 1)); 
 which means if we have a single process my_rank = 0. The dest will be calcuated (0+1)mod1 = 0.
 The source will be calculated (0==0) -> True -> (1 - 1) = 0. We will send and recieve from the same process which 
 works just fine.
 
HW2.2
1) This modification enables our process to distribute the aggregation work more. No longer do we have 
 the overhead from all the processes sending messages to 0. We now do all of our work then wait via RECV 
 for the distributed aggregating to sweep through the ranks.
 
HW2.3
1) 